/*
 * SwaggerPetstoreOpenAPI30Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package io.swagger.petstore.controllers;

import io.swagger.petstore.Environment;
import io.swagger.petstore.SwaggerPetstoreOpenAPI30Client;
import io.swagger.petstore.authentication.ApiKeyModel;
import io.swagger.petstore.authentication.PetstoreAuthModel;
import io.swagger.petstore.models.OAuthToken;
import io.swagger.petstore.testing.HttpCallbackCatcher;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Rule;
import org.junit.rules.Timeout;

/**
 * Base class for all test cases.
 */
public class BaseControllerTest {
    /**
     * Test configuration.
     */
    public static final int REQUEST_TIMEOUT = 30;

    public static final double ASSERT_PRECISION = 0.01;
    
    /**
     * Global rules for tests.
     */
    @Rule
    public Timeout globalTimeout = Timeout.seconds(REQUEST_TIMEOUT);
    
    /**
     * Test fixtures,
     * Used to serve as HttpCallback and to capture request & response.
     */

    protected static HttpCallbackCatcher httpResponse;
    
    /**
     * Setup test.
     */
    @BeforeClass
    public static void setUp() throws Exception {
        httpResponse = new HttpCallbackCatcher(); 
    }

    /**
     * Tear down test.
     */
    @AfterClass
    public static void tearDown() throws Exception {
        httpResponse = null;
    }

    /**
     * Create test configuration from Environment variables.
     */
    protected static SwaggerPetstoreOpenAPI30Client createConfigurationFromEnvironment() {
        SwaggerPetstoreOpenAPI30Client.Builder builder =
                new SwaggerPetstoreOpenAPI30Client.Builder();

        final String environment = System.getenv("SWAGGER_PETSTORE_OPEN_API_30_LIB_ENVIRONMENT");
        final String timeout = System.getenv("SWAGGER_PETSTORE_OPEN_API_30_LIB_TIMEOUT");
        final String oAuthClientId =
                System.getenv("SWAGGER_PETSTORE_OPEN_API_30_LIB_O_AUTH_CLIENT_ID");
        final String oAuthRedirectUri =
                System.getenv("SWAGGER_PETSTORE_OPEN_API_30_LIB_O_AUTH_REDIRECT_URI");
        final String apiKey = System.getenv("SWAGGER_PETSTORE_OPEN_API_30_LIB_API_KEY");

        if (oAuthClientId != null && oAuthRedirectUri != null) {
            builder.petstoreAuthCredentials(new PetstoreAuthModel
                    .Builder(oAuthClientId, oAuthRedirectUri)
                    .build());
        }
        if (apiKey != null) {
            builder.apiKeyCredentials(new ApiKeyModel
                    .Builder(apiKey)
                    .build());
        }
        if (environment != null) {
            builder.environment(Environment.fromString(environment));
        }
        if (timeout != null) {
            builder.httpClientConfig(configBuilder -> configBuilder.timeout(
                    Long.parseLong(timeout)));
        }
        return builder.build();
    }

    
    /**
     * Create test configuration.
     */
    protected static SwaggerPetstoreOpenAPI30Client createConfiguration() {
        // Set Configuration parameters for test execution
        SwaggerPetstoreOpenAPI30Client config = createConfigurationFromEnvironment();
        config = config.newBuilder()
                .httpCallback(httpResponse)
                .build();
        return config;
    }
}
